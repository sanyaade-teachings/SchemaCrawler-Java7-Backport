<project name="schemacrawler" default="make-distribution" basedir=".">

  <property name="distribution.assembly"
            location="${SchemaCrawler.home}/schemacrawler-distrib/src/assembly" />
  <property name="distribution.target"
            location="${SchemaCrawler.home}/schemacrawler-distrib/target" />
  <property name="schemacrawler.complete-distribution"
          value="${distribution.target}/_complete-distribution" />
  <property name="schemacrawler.distribution.jar"
            value="${distribution.target}/schemacrawler-${SchemaCrawler.version}.jar" />
  <property name="schemacrawler.distribution.sources.jar"
            value="${distribution.target}/schemacrawler-${SchemaCrawler.version}-sources.jar" />
  <property name="schemacrawler.distribution.javadoc.jar"
            value="${distribution.target}/schemacrawler-${SchemaCrawler.version}-javadoc.jar" />

  <available file="lgpl-3.0.txt" property="available.lgpl-3.0.txt"/>
  <available file="bnd-1.50.0.jar" property="available.bnd.jar"/>
  <available file="ivy-2.4.0.jar" property="available.ivy.jar"/>

  <target name="make-distribution"
          depends="
            download-tools,
            make-super-jar,
            make-super-distribution,
            make-main-distribution,
            cleanup-distribution
          "
          description="Package all sub-project jars into the distributable jar" />


  <target name="download-tools" depends="download-lgpl,download-bnd-tool,download-ivy"/>

  <target name="download-lgpl" unless="available.lgpl-3.0.txt">
    <get src="http://www.gnu.org/licenses/lgpl-3.0.txt"
       dest="lgpl-3.0.txt" usetimestamp="true" />
  </target>

  <target name="download-bnd-tool" unless="available.bnd.jar">
    <get src="http://repo1.maven.org/maven2/biz/aQute/bnd/1.50.0/bnd-1.50.0.jar"
       dest="bnd-1.50.0.jar" usetimestamp="true" />
  </target>

  <target name="download-ivy" unless="available.ivy.jar">
    <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/2.4.0/ivy-2.4.0.jar"
       dest="ivy-2.4.0.jar" usetimestamp="true" />
  </target>

  <target name="make-super-jar">

    <!-- Build super-jar -->

    <copy file="${SchemaCrawler.home}/schemacrawler/target/schemacrawler-${SchemaCrawler.version}-jar-with-dependencies.jar"
          tofile="${schemacrawler.distribution.jar}" />

    <jar destfile="${schemacrawler.distribution.jar}"
      index="true"
      update="true"
      whenmanifestonly="create" >
      <manifest>
        <attribute name="Product" value="SchemaCrawler" />
        <attribute name="Version" value="${SchemaCrawler.version}" />
        <attribute name="Author" value="Sualeh Fatehi sualeh@hotmail.com" />
        <attribute name="Copyright" value="Copyright (c) 2000-2017, Sualeh Fatehi" />
      	<attribute name="Website" value="http://www.SchemaCrawler.com" />
        <attribute name="Main-Class" value="schemacrawler.Main" />
        <section name="schemacrawler/crawl/">
          <attribute name="Sealed" value="true"/>
        </section>
      </manifest>
    </jar>
  	
    <zip destfile="${schemacrawler.distribution.jar}.work">
      <zipfileset src="${schemacrawler.distribution.jar}">
        <exclude name="META-INF/maven/" />
      </zipfileset>
    </zip>  	
    <move file="${schemacrawler.distribution.jar}.work"
          tofile="${schemacrawler.distribution.jar}" />
  	
    <taskdef
    resource="aQute/bnd/ant/taskdef.properties"
    classpath="bnd-1.50.0.jar"/>
    <copy file="${distribution.assembly}/schemacrawler.bnd"
          tofile="./schemacrawler-${SchemaCrawler.version}.bnd" />
    <!--
    <bndwrap output="${distribution.target}">
        <fileset dir="${distribution.target}" includes="*.jar" />
    </bndwrap>
    -->
    <move overwrite="true" todir="${distribution.target}" >
        <fileset dir="${distribution.target}" includes="*.bar" />
        <mapper type="glob" from="*.bar" to="*.jar" />
    </move>

    <!-- Build sources jar -->

    <jar destfile="${schemacrawler.distribution.sources.jar}" index="true">
      <manifest>
        <attribute name="Product" value="SchemaCrawler" />
        <attribute name="Version" value="${SchemaCrawler.version}" />
        <attribute name="Author" value="Sualeh Fatehi sualeh@hotmail.com" />
        <attribute name="Copyright" value="Copyright (c) 2000-2017, Sualeh Fatehi" />
        <attribute name="Main-Class" value="schemacrawler.Main" />
      </manifest>
      <zipfileset src="${SchemaCrawler.home}/schemacrawler-api/target/schemacrawler-api-${SchemaCrawler.version}-sources.jar" />
      <zipfileset src="${SchemaCrawler.home}/schemacrawler-commandline/target/schemacrawler-commandline-${SchemaCrawler.version}-sources.jar" />
      <zipfileset src="${SchemaCrawler.home}/schemacrawler-tools/target/schemacrawler-tools-${SchemaCrawler.version}-sources.jar" />
      <zipfileset src="${SchemaCrawler.home}/schemacrawler-integrations/target/schemacrawler-integrations-${SchemaCrawler.version}-sources.jar" />
    </jar>

    <!-- Build javadoc jar -->

    <copy file="${SchemaCrawler.home}/schemacrawler-api/target/schemacrawler-api-${SchemaCrawler.version}-javadoc.jar"
          tofile="${schemacrawler.distribution.javadoc.jar}" />
    <jar destfile="${schemacrawler.distribution.javadoc.jar}"
      index="true"
      update="true"
      whenmanifestonly="create" >
      <manifest>
        <attribute name="Product" value="SchemaCrawler" />
        <attribute name="Version" value="${SchemaCrawler.version}" />
        <attribute name="Author" value="Sualeh Fatehi sualeh@hotmail.com" />
        <attribute name="Copyright" value="Copyright (c) 2000-2017, Sualeh Fatehi" />
        <attribute name="Main-Class" value="schemacrawler.Main" />
      </manifest>
    </jar>

  </target>


  <target name="make-main-distribution">

    <property name="main-distribution.staging.dir"
              location="${distribution.target}/_main-distribution" />

    <property name="main-distribution.stem"
              value="schemacrawler-${SchemaCrawler.version}-main" />


    <!-- 1. STAGE FOR EXAMPLES -->

    <!-- Copy licenses -->
    <copy file="lgpl-3.0.txt"
          tofile="${main-distribution.staging.dir}/LICENSE.txt" />

    <!-- Create test database -->
    <copy file="${SchemaCrawler.home}/schemacrawler-testdb/target/schemacrawler-testdb-${SchemaCrawler.version}.jar"
          todir="${main-distribution.staging.dir}/_testdb/lib"/>
    <copy todir="${main-distribution.staging.dir}/_testdb">
      <fileset dir="${schemacrawler.complete-distribution}">
        <include name="**/hsqldb*.jar" />
      </fileset>
    </copy>
    <copy file="${SchemaCrawler.home}/schemacrawler-sqlite/src/test/resources/sc.db"
          todir="${main-distribution.staging.dir}/_testdb"/>
          	
    <!-- Copy Apache Ant Ivy -->
    <copy file="ivy-2.4.0.jar"
          todir="${main-distribution.staging.dir}/_downloader" />

    <java classname="schemacrawler.tools.text.utility.WriteStylesheetFile">
      <arg value="${main-distribution.staging.dir}/examples/sc.css"/>
      <classpath>
        <pathelement location="${schemacrawler.distribution.jar}"/>
      </classpath>
    </java>

    <!-- Copy config files -->
    <copy todir="${main-distribution.staging.dir}/examples/lint">
      <fileset dir="${SchemaCrawler.home}/schemacrawler-distrib/src/config">
        <include name="schemacrawler-linter-configs.xml" />
      </fileset>
    </copy>
    <copy todir="${main-distribution.staging.dir}/examples/spring">
      <fileset dir="${SchemaCrawler.home}/schemacrawler-integrations/src/test/resources">
        <include name="context.xml" />
      </fileset>
    </copy>

    <move
      file="${schemacrawler.complete-distribution}"
      tofile="${main-distribution.staging.dir}/_schemacrawler" />

    <fixcrlf
      srcdir="${main-distribution.staging.dir}"
      includes="**/*.sh"
      eol="unix"
      eof="remove"
      tab="remove"
      tablength="2"
      outputencoding="UTF-8" />

    <!-- 2. CREATE BINARY DISTRIBUTION FROM THE STAGED EXAMPLES -->

    <!-- Create zip file for distribution -->
    <delete file="${distribution.target}/${main-distribution.stem}.zip" />
    <zip destfile="${distribution.target}/${main-distribution.stem}.zip">
      <zipfileset dir="${main-distribution.staging.dir}"
                  prefix="${main-distribution.stem}"
                  defaultexcludes="yes">
        <exclude name="**/*.sh"/>
      </zipfileset>
      <zipfileset dir="${main-distribution.staging.dir}"
                  prefix="${main-distribution.stem}"
                  defaultexcludes="yes"
                  filemode="771">
        <include name="**/*.sh"/>
      </zipfileset>
    </zip>

  </target>

  <target name="make-super-distribution">

    <copy todir="${schemacrawler.complete-distribution}">
      <fileset dir="${distribution.assembly}">
        <include name="schemacrawler.cmd" />
        <include name="schemacrawler.sh" />
      </fileset>
    </copy>

    <!-- Move SchemaCrawler distribution, for use in the examples -->
    <copy
      file="${schemacrawler.distribution.jar}"
      todir="${schemacrawler.complete-distribution}/lib"/>
    <copy
      file="${SchemaCrawler.home}/schemacrawler-distrib/src/config/schemacrawler.config.properties"
      todir="${schemacrawler.complete-distribution}/config"/>
    <copy
      file="${SchemaCrawler.home}/schemacrawler-distrib/src/config/schemacrawler.colormap.properties"
      todir="${schemacrawler.complete-distribution}/config"/>

    <create-dbserver-distribution database="offline" />
    <create-dbserver-distribution database="db2" />
    <create-dbserver-distribution database="hsqldb" />
    <create-dbserver-distribution database="mysql" />
    <create-dbserver-distribution database="oracle" />
    <create-dbserver-distribution database="postgresql" />
    <create-dbserver-distribution database="sqlite" />
    <create-dbserver-distribution database="sqlserver" />
    <create-dbserver-distribution database="sybaseiq" />

  </target>

  <target name="cleanup-distribution">

    <delete>
      <fileset dir="${distribution.target}">
        <include name="*.*" />
        <exclude name="schemacrawler*.zip" />
        <exclude name="schemacrawler*.jar" />
      </fileset>
    </delete>

  </target>

  <macrodef name="create-dbserver-distribution">

    <attribute name="database" />

    <sequential>

      <copy file="${SchemaCrawler.home}/schemacrawler-@{database}/DRIVER.LICENSE.txt"
            tofile="${schemacrawler.complete-distribution}/DRIVER.LICENSE-@{database}.txt"
            failonerror="false" />

    </sequential>

  </macrodef>

</project>
